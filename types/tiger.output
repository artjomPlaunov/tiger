State 61 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 pos: %empty

    3 decs: %empty
    4     | dec_lst

    5 dec_lst: dec
    6        | dec dec_lst

    7 dec: namety_lst
    8    | VAR pos ID ASSIGN exp
    9    | VAR pos ID COLON ID ASSIGN exp
   10    | fun_dec_lst

   11 fun_dec_lst: fun_dec
   12            | fun_dec fun_dec_lst

   13 fun_dec: FUNCTION ID LPAREN RPAREN EQ exp
   14        | FUNCTION ID LPAREN field_lst RPAREN EQ exp
   15        | FUNCTION ID LPAREN RPAREN COLON ID EQ exp
   16        | FUNCTION ID LPAREN field_lst RPAREN COLON ID EQ exp

   17 namety_lst: namety
   18           | namety namety_lst

   19 namety: TYPE ID EQ ty

   20 ty: ID
   21   | LBRACE RBRACE
   22   | LBRACE field_lst RBRACE
   23   | ARRAY OF ID

   24 field_lst: field
   25          | field COMMA field_lst

   26 field: ID COLON ID

   27 l_val: ID pos
   28      | l_val DOT pos ID
   29      | l_val LBRACK exp RBRACK

   30 exp: l_val
   31    | NIL pos
   32    | INT pos
   33    | STRING pos
   34    | UMINUS pos exp
   35    | fun_call
   36    | exp PLUS pos exp
   37    | exp MINUS pos exp
   38    | exp TIMES pos exp
   39    | exp DIVIDE pos exp
   40    | exp EQ pos exp
   41    | exp NEQ pos exp
   42    | exp GT pos exp
   43    | exp LT pos exp
   44    | exp GE pos exp
   45    | exp LE pos exp
   46    | exp AND pos exp
   47    | exp OR pos exp
   48    | ID LBRACE pos RBRACE
   49    | ID LBRACE pos efield_lst RBRACE
   50    | seq_exp
   51    | l_val LBRACK exp RBRACK pos OF exp
   52    | l_val ASSIGN pos exp
   53    | IF exp THEN exp ELSE exp
   54    | IF exp THEN exp
   55    | WHILE pos exp DO exp
   56    | FOR pos ID ASSIGN exp TO exp DO exp
   57    | BREAK pos
   58    | LET pos decs IN exp_lst END

   59 seq_exp: LPAREN pos RPAREN
   60        | LPAREN pos exp_lst RPAREN

   61 exp_lst: exp
   62        | exp SEMICOLON exp_lst

   63 fun_call: ID LPAREN pos RPAREN
   64         | ID LPAREN pos arg_lst RPAREN

   65 arg_lst: exp
   66        | exp COMMA arg_lst

   67 efield: ID EQ exp

   68 efield_lst: efield
   69           | efield COMMA efield_lst


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 9 13 14 15 16 19 20 23 26 27 28 48 49 56 63 64 67
STRING (259) 33
INT (260) 32
COMMA (261) 25 66 69
COLON (262) 9 15 16 26
SEMICOLON (263) 62
LPAREN (264) 13 14 15 16 59 60 63 64
RPAREN (265) 13 14 15 16 59 60 63 64
LBRACK (266) 29 51
RBRACK (267) 29 51
LBRACE (268) 21 22 48 49
RBRACE (269) 21 22 48 49
DOT (270) 28
PLUS (271) 36
MINUS (272) 37
TIMES (273) 38
DIVIDE (274) 39
EQ (275) 13 14 15 16 19 40 67
NEQ (276) 41
LT (277) 43
GT (278) 42
LE (279) 45
GE (280) 44
AND (281) 46
OR (282) 47
ASSIGN (283) 8 9 52 56
ARRAY (284) 23
IF (285) 53 54
THEN (286) 53 54
ELSE (287) 53
WHILE (288) 55
FOR (289) 56
TO (290) 56
DO (291) 55 56
LET (292) 58
IN (293) 58
END (294) 58
OF (295) 23 51
BREAK (296) 57
NIL (297) 31
FUNCTION (298) 13 14 15 16
VAR (299) 8 9
TYPE (300) 19
UMINUS (301) 34


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
pos (49)
    on left: 2, on right: 8 9 27 28 31 32 33 34 36 37 38 39 40 41 42
    43 44 45 46 47 48 49 51 52 55 56 57 58 59 60 63 64
decs (50)
    on left: 3 4, on right: 58
dec_lst (51)
    on left: 5 6, on right: 4 6
dec (52)
    on left: 7 8 9 10, on right: 5 6
fun_dec_lst (53)
    on left: 11 12, on right: 10 12
fun_dec (54)
    on left: 13 14 15 16, on right: 11 12
namety_lst (55)
    on left: 17 18, on right: 7 18
namety (56)
    on left: 19, on right: 17 18
ty (57)
    on left: 20 21 22 23, on right: 19
field_lst (58)
    on left: 24 25, on right: 14 16 22 25
field (59)
    on left: 26, on right: 24 25
l_val (60)
    on left: 27 28 29, on right: 28 29 30 51 52
exp (61)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58, on right: 1 8 9 13 14 15 16 29
    34 36 37 38 39 40 41 42 43 44 45 46 47 51 52 53 54 55 56 61 62
    65 66 67
seq_exp (62)
    on left: 59 60, on right: 50
exp_lst (63)
    on left: 61 62, on right: 58 60 62
fun_call (64)
    on left: 63 64, on right: 35
arg_lst (65)
    on left: 65 66, on right: 64 66
efield (66)
    on left: 67, on right: 68 69
efield_lst (67)
    on left: 68 69, on right: 49 69


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    program   go to state 12
    l_val     go to state 13
    exp       go to state 14
    seq_exp   go to state 15
    fun_call  go to state 16


State 1

   27 l_val: ID . pos
   48 exp: ID . LBRACE pos RBRACE
   49    | ID . LBRACE pos efield_lst RBRACE
   63 fun_call: ID . LPAREN pos RPAREN
   64         | ID . LPAREN pos arg_lst RPAREN

    LPAREN  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 2 (pos)

    pos  go to state 19


State 2

   33 exp: STRING . pos

    $default  reduce using rule 2 (pos)

    pos  go to state 20


State 3

   32 exp: INT . pos

    $default  reduce using rule 2 (pos)

    pos  go to state 21


State 4

   59 seq_exp: LPAREN . pos RPAREN
   60        | LPAREN . pos exp_lst RPAREN

    $default  reduce using rule 2 (pos)

    pos  go to state 22


State 5

   53 exp: IF . exp THEN exp ELSE exp
   54    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 23
    seq_exp   go to state 15
    fun_call  go to state 16


State 6

   55 exp: WHILE . pos exp DO exp

    $default  reduce using rule 2 (pos)

    pos  go to state 24


State 7

   56 exp: FOR . pos ID ASSIGN exp TO exp DO exp

    $default  reduce using rule 2 (pos)

    pos  go to state 25


State 8

   58 exp: LET . pos decs IN exp_lst END

    $default  reduce using rule 2 (pos)

    pos  go to state 26


State 9

   57 exp: BREAK . pos

    $default  reduce using rule 2 (pos)

    pos  go to state 27


State 10

   31 exp: NIL . pos

    $default  reduce using rule 2 (pos)

    pos  go to state 28


State 11

   34 exp: UMINUS . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 29


State 12

    0 $accept: program . $end

    $end  shift, and go to state 30


State 13

   28 l_val: l_val . DOT pos ID
   29      | l_val . LBRACK exp RBRACK
   30 exp: l_val .
   51    | l_val . LBRACK exp RBRACK pos OF exp
   52    | l_val . ASSIGN pos exp

    LBRACK  shift, and go to state 31
    DOT     shift, and go to state 32
    ASSIGN  shift, and go to state 33

    $default  reduce using rule 30 (exp)


State 14

    1 program: exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 1 (program)


State 15

   50 exp: seq_exp .

    $default  reduce using rule 50 (exp)


State 16

   35 exp: fun_call .

    $default  reduce using rule 35 (exp)


State 17

   63 fun_call: ID LPAREN . pos RPAREN
   64         | ID LPAREN . pos arg_lst RPAREN

    $default  reduce using rule 2 (pos)

    pos  go to state 46


State 18

   48 exp: ID LBRACE . pos RBRACE
   49    | ID LBRACE . pos efield_lst RBRACE

    $default  reduce using rule 2 (pos)

    pos  go to state 47


State 19

   27 l_val: ID pos .

    $default  reduce using rule 27 (l_val)


State 20

   33 exp: STRING pos .

    $default  reduce using rule 33 (exp)


State 21

   32 exp: INT pos .

    $default  reduce using rule 32 (exp)


State 22

   59 seq_exp: LPAREN pos . RPAREN
   60        | LPAREN pos . exp_lst RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 48
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 49
    seq_exp   go to state 15
    exp_lst   go to state 50
    fun_call  go to state 16


State 23

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   53    | IF exp . THEN exp ELSE exp
   54    | IF exp . THEN exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    THEN    shift, and go to state 51


State 24

   55 exp: WHILE pos . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 52
    seq_exp   go to state 15
    fun_call  go to state 16


State 25

   56 exp: FOR pos . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 53


State 26

   58 exp: LET pos . decs IN exp_lst END

    FUNCTION  shift, and go to state 54
    VAR       shift, and go to state 55
    TYPE      shift, and go to state 56

    $default  reduce using rule 3 (decs)

    decs         go to state 57
    dec_lst      go to state 58
    dec          go to state 59
    fun_dec_lst  go to state 60
    fun_dec      go to state 61
    namety_lst   go to state 62
    namety       go to state 63


State 27

   57 exp: BREAK pos .

    $default  reduce using rule 57 (exp)


State 28

   31 exp: NIL pos .

    $default  reduce using rule 31 (exp)


State 29

   34 exp: UMINUS pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 64
    seq_exp   go to state 15
    fun_call  go to state 16


State 30

    0 $accept: program $end .

    $default  accept


State 31

   29 l_val: l_val LBRACK . exp RBRACK
   51 exp: l_val LBRACK . exp RBRACK pos OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 65
    seq_exp   go to state 15
    fun_call  go to state 16


State 32

   28 l_val: l_val DOT . pos ID

    $default  reduce using rule 2 (pos)

    pos  go to state 66


State 33

   52 exp: l_val ASSIGN . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 67


State 34

   36 exp: exp PLUS . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 68


State 35

   37 exp: exp MINUS . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 69


State 36

   38 exp: exp TIMES . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 70


State 37

   39 exp: exp DIVIDE . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 71


State 38

   40 exp: exp EQ . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 72


State 39

   41 exp: exp NEQ . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 73


State 40

   43 exp: exp LT . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 74


State 41

   42 exp: exp GT . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 75


State 42

   45 exp: exp LE . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 76


State 43

   44 exp: exp GE . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 77


State 44

   46 exp: exp AND . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 78


State 45

   47 exp: exp OR . pos exp

    $default  reduce using rule 2 (pos)

    pos  go to state 79


State 46

   63 fun_call: ID LPAREN pos . RPAREN
   64         | ID LPAREN pos . arg_lst RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 80
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 81
    seq_exp   go to state 15
    fun_call  go to state 16
    arg_lst   go to state 82


State 47

   48 exp: ID LBRACE pos . RBRACE
   49    | ID LBRACE pos . efield_lst RBRACE

    ID      shift, and go to state 83
    RBRACE  shift, and go to state 84

    efield      go to state 85
    efield_lst  go to state 86


State 48

   59 seq_exp: LPAREN pos RPAREN .

    $default  reduce using rule 59 (seq_exp)


State 49

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   61 exp_lst: exp .
   62        | exp . SEMICOLON exp_lst

    SEMICOLON  shift, and go to state 87
    PLUS       shift, and go to state 34
    MINUS      shift, and go to state 35
    TIMES      shift, and go to state 36
    DIVIDE     shift, and go to state 37
    EQ         shift, and go to state 38
    NEQ        shift, and go to state 39
    LT         shift, and go to state 40
    GT         shift, and go to state 41
    LE         shift, and go to state 42
    GE         shift, and go to state 43
    AND        shift, and go to state 44
    OR         shift, and go to state 45

    $default  reduce using rule 61 (exp_lst)


State 50

   60 seq_exp: LPAREN pos exp_lst . RPAREN

    RPAREN  shift, and go to state 88


State 51

   53 exp: IF exp THEN . exp ELSE exp
   54    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 89
    seq_exp   go to state 15
    fun_call  go to state 16


State 52

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   55    | WHILE pos exp . DO exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    DO      shift, and go to state 90


State 53

   56 exp: FOR pos ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 91


State 54

   13 fun_dec: FUNCTION . ID LPAREN RPAREN EQ exp
   14        | FUNCTION . ID LPAREN field_lst RPAREN EQ exp
   15        | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp
   16        | FUNCTION . ID LPAREN field_lst RPAREN COLON ID EQ exp

    ID  shift, and go to state 92


State 55

    8 dec: VAR . pos ID ASSIGN exp
    9    | VAR . pos ID COLON ID ASSIGN exp

    $default  reduce using rule 2 (pos)

    pos  go to state 93


State 56

   19 namety: TYPE . ID EQ ty

    ID  shift, and go to state 94


State 57

   58 exp: LET pos decs . IN exp_lst END

    IN  shift, and go to state 95


State 58

    4 decs: dec_lst .

    $default  reduce using rule 4 (decs)


State 59

    5 dec_lst: dec .
    6        | dec . dec_lst

    FUNCTION  shift, and go to state 54
    VAR       shift, and go to state 55
    TYPE      shift, and go to state 56

    $default  reduce using rule 5 (dec_lst)

    dec_lst      go to state 96
    dec          go to state 59
    fun_dec_lst  go to state 60
    fun_dec      go to state 61
    namety_lst   go to state 62
    namety       go to state 63


State 60

   10 dec: fun_dec_lst .

    $default  reduce using rule 10 (dec)


State 61

   11 fun_dec_lst: fun_dec .
   12            | fun_dec . fun_dec_lst

    FUNCTION  shift, and go to state 54

    FUNCTION  [reduce using rule 11 (fun_dec_lst)]
    $default  reduce using rule 11 (fun_dec_lst)

    fun_dec_lst  go to state 97
    fun_dec      go to state 61


State 62

    7 dec: namety_lst .

    $default  reduce using rule 7 (dec)


State 63

   17 namety_lst: namety .
   18           | namety . namety_lst

    TYPE  shift, and go to state 56

    TYPE      [reduce using rule 17 (namety_lst)]
    $default  reduce using rule 17 (namety_lst)

    namety_lst  go to state 98
    namety      go to state 63


State 64

   34 exp: UMINUS pos exp .
   36    | exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    $default  reduce using rule 34 (exp)


State 65

   29 l_val: l_val LBRACK exp . RBRACK
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   51    | l_val LBRACK exp . RBRACK pos OF exp

    RBRACK  shift, and go to state 99
    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45


State 66

   28 l_val: l_val DOT pos . ID

    ID  shift, and go to state 100


State 67

   52 exp: l_val ASSIGN pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 101
    seq_exp   go to state 15
    fun_call  go to state 16


State 68

   36 exp: exp PLUS pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 102
    seq_exp   go to state 15
    fun_call  go to state 16


State 69

   37 exp: exp MINUS pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 103
    seq_exp   go to state 15
    fun_call  go to state 16


State 70

   38 exp: exp TIMES pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 104
    seq_exp   go to state 15
    fun_call  go to state 16


State 71

   39 exp: exp DIVIDE pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 105
    seq_exp   go to state 15
    fun_call  go to state 16


State 72

   40 exp: exp EQ pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 106
    seq_exp   go to state 15
    fun_call  go to state 16


State 73

   41 exp: exp NEQ pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 107
    seq_exp   go to state 15
    fun_call  go to state 16


State 74

   43 exp: exp LT pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 108
    seq_exp   go to state 15
    fun_call  go to state 16


State 75

   42 exp: exp GT pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 109
    seq_exp   go to state 15
    fun_call  go to state 16


State 76

   45 exp: exp LE pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 110
    seq_exp   go to state 15
    fun_call  go to state 16


State 77

   44 exp: exp GE pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 111
    seq_exp   go to state 15
    fun_call  go to state 16


State 78

   46 exp: exp AND pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 112
    seq_exp   go to state 15
    fun_call  go to state 16


State 79

   47 exp: exp OR pos . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 113
    seq_exp   go to state 15
    fun_call  go to state 16


State 80

   63 fun_call: ID LPAREN pos RPAREN .

    $default  reduce using rule 63 (fun_call)


State 81

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   65 arg_lst: exp .
   66        | exp . COMMA arg_lst

    COMMA   shift, and go to state 114
    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 65 (arg_lst)


State 82

   64 fun_call: ID LPAREN pos arg_lst . RPAREN

    RPAREN  shift, and go to state 115


State 83

   67 efield: ID . EQ exp

    EQ  shift, and go to state 116


State 84

   48 exp: ID LBRACE pos RBRACE .

    $default  reduce using rule 48 (exp)


State 85

   68 efield_lst: efield .
   69           | efield . COMMA efield_lst

    COMMA  shift, and go to state 117

    $default  reduce using rule 68 (efield_lst)


State 86

   49 exp: ID LBRACE pos efield_lst . RBRACE

    RBRACE  shift, and go to state 118


State 87

   62 exp_lst: exp SEMICOLON . exp_lst

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 49
    seq_exp   go to state 15
    exp_lst   go to state 119
    fun_call  go to state 16


State 88

   60 seq_exp: LPAREN pos exp_lst RPAREN .

    $default  reduce using rule 60 (seq_exp)


State 89

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   53    | IF exp THEN exp . ELSE exp
   54    | IF exp THEN exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    ELSE    shift, and go to state 120

    $default  reduce using rule 54 (exp)


State 90

   55 exp: WHILE pos exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 121
    seq_exp   go to state 15
    fun_call  go to state 16


State 91

   56 exp: FOR pos ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 122
    seq_exp   go to state 15
    fun_call  go to state 16


State 92

   13 fun_dec: FUNCTION ID . LPAREN RPAREN EQ exp
   14        | FUNCTION ID . LPAREN field_lst RPAREN EQ exp
   15        | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp
   16        | FUNCTION ID . LPAREN field_lst RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 123


State 93

    8 dec: VAR pos . ID ASSIGN exp
    9    | VAR pos . ID COLON ID ASSIGN exp

    ID  shift, and go to state 124


State 94

   19 namety: TYPE ID . EQ ty

    EQ  shift, and go to state 125


State 95

   58 exp: LET pos decs IN . exp_lst END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 49
    seq_exp   go to state 15
    exp_lst   go to state 126
    fun_call  go to state 16


State 96

    6 dec_lst: dec dec_lst .

    $default  reduce using rule 6 (dec_lst)


State 97

   12 fun_dec_lst: fun_dec fun_dec_lst .

    $default  reduce using rule 12 (fun_dec_lst)


State 98

   18 namety_lst: namety namety_lst .

    $default  reduce using rule 18 (namety_lst)


State 99

   29 l_val: l_val LBRACK exp RBRACK .
   51 exp: l_val LBRACK exp RBRACK . pos OF exp

    OF        reduce using rule 2 (pos)
    $default  reduce using rule 29 (l_val)

    pos  go to state 127


State 100

   28 l_val: l_val DOT pos ID .

    $default  reduce using rule 28 (l_val)


State 101

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   52    | l_val ASSIGN pos exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 52 (exp)


State 102

   36 exp: exp . PLUS pos exp
   36    | exp PLUS pos exp .
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 36 (exp)


State 103

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   37    | exp MINUS pos exp .
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 37 (exp)


State 104

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   38    | exp TIMES pos exp .
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    $default  reduce using rule 38 (exp)


State 105

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   39    | exp DIVIDE pos exp .
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    $default  reduce using rule 39 (exp)


State 106

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   40    | exp EQ pos exp .
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (exp)


State 107

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   41    | exp NEQ pos exp .
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 41 (exp)


State 108

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   43    | exp LT pos exp .
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 43 (exp)


State 109

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   42    | exp GT pos exp .
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 42 (exp)


State 110

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   45    | exp LE pos exp .
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 45 (exp)


State 111

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   44    | exp GE pos exp .
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 44 (exp)


State 112

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   46    | exp AND pos exp .
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43

    $default  reduce using rule 46 (exp)


State 113

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   47    | exp OR pos exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44

    $default  reduce using rule 47 (exp)


State 114

   66 arg_lst: exp COMMA . arg_lst

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 81
    seq_exp   go to state 15
    fun_call  go to state 16
    arg_lst   go to state 128


State 115

   64 fun_call: ID LPAREN pos arg_lst RPAREN .

    $default  reduce using rule 64 (fun_call)


State 116

   67 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 129
    seq_exp   go to state 15
    fun_call  go to state 16


State 117

   69 efield_lst: efield COMMA . efield_lst

    ID  shift, and go to state 83

    efield      go to state 85
    efield_lst  go to state 130


State 118

   49 exp: ID LBRACE pos efield_lst RBRACE .

    $default  reduce using rule 49 (exp)


State 119

   62 exp_lst: exp SEMICOLON exp_lst .

    $default  reduce using rule 62 (exp_lst)


State 120

   53 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 131
    seq_exp   go to state 15
    fun_call  go to state 16


State 121

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   55    | WHILE pos exp DO exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 55 (exp)


State 122

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   56    | FOR pos ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    TO      shift, and go to state 132


State 123

   13 fun_dec: FUNCTION ID LPAREN . RPAREN EQ exp
   14        | FUNCTION ID LPAREN . field_lst RPAREN EQ exp
   15        | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp
   16        | FUNCTION ID LPAREN . field_lst RPAREN COLON ID EQ exp

    ID      shift, and go to state 133
    RPAREN  shift, and go to state 134

    field_lst  go to state 135
    field      go to state 136


State 124

    8 dec: VAR pos ID . ASSIGN exp
    9    | VAR pos ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 137
    ASSIGN  shift, and go to state 138


State 125

   19 namety: TYPE ID EQ . ty

    ID      shift, and go to state 139
    LBRACE  shift, and go to state 140
    ARRAY   shift, and go to state 141

    ty  go to state 142


State 126

   58 exp: LET pos decs IN exp_lst . END

    END  shift, and go to state 143


State 127

   51 exp: l_val LBRACK exp RBRACK pos . OF exp

    OF  shift, and go to state 144


State 128

   66 arg_lst: exp COMMA arg_lst .

    $default  reduce using rule 66 (arg_lst)


State 129

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   67 efield: ID EQ exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 67 (efield)


State 130

   69 efield_lst: efield COMMA efield_lst .

    $default  reduce using rule 69 (efield_lst)


State 131

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   53    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 53 (exp)


State 132

   56 exp: FOR pos ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 145
    seq_exp   go to state 15
    fun_call  go to state 16


State 133

   26 field: ID . COLON ID

    COLON  shift, and go to state 146


State 134

   13 fun_dec: FUNCTION ID LPAREN RPAREN . EQ exp
   15        | FUNCTION ID LPAREN RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 147
    EQ     shift, and go to state 148


State 135

   14 fun_dec: FUNCTION ID LPAREN field_lst . RPAREN EQ exp
   16        | FUNCTION ID LPAREN field_lst . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 149


State 136

   24 field_lst: field .
   25          | field . COMMA field_lst

    COMMA  shift, and go to state 150

    $default  reduce using rule 24 (field_lst)


State 137

    9 dec: VAR pos ID COLON . ID ASSIGN exp

    ID  shift, and go to state 151


State 138

    8 dec: VAR pos ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 152
    seq_exp   go to state 15
    fun_call  go to state 16


State 139

   20 ty: ID .

    $default  reduce using rule 20 (ty)


State 140

   21 ty: LBRACE . RBRACE
   22   | LBRACE . field_lst RBRACE

    ID      shift, and go to state 133
    RBRACE  shift, and go to state 153

    field_lst  go to state 154
    field      go to state 136


State 141

   23 ty: ARRAY . OF ID

    OF  shift, and go to state 155


State 142

   19 namety: TYPE ID EQ ty .

    $default  reduce using rule 19 (namety)


State 143

   58 exp: LET pos decs IN exp_lst END .

    $default  reduce using rule 58 (exp)


State 144

   51 exp: l_val LBRACK exp RBRACK pos OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 156
    seq_exp   go to state 15
    fun_call  go to state 16


State 145

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   56    | FOR pos ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45
    DO      shift, and go to state 157


State 146

   26 field: ID COLON . ID

    ID  shift, and go to state 158


State 147

   15 fun_dec: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 159


State 148

   13 fun_dec: FUNCTION ID LPAREN RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 160
    seq_exp   go to state 15
    fun_call  go to state 16


State 149

   14 fun_dec: FUNCTION ID LPAREN field_lst RPAREN . EQ exp
   16        | FUNCTION ID LPAREN field_lst RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 161
    EQ     shift, and go to state 162


State 150

   25 field_lst: field COMMA . field_lst

    ID  shift, and go to state 133

    field_lst  go to state 163
    field      go to state 136


State 151

    9 dec: VAR pos ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 164


State 152

    8 dec: VAR pos ID ASSIGN exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 8 (dec)


State 153

   21 ty: LBRACE RBRACE .

    $default  reduce using rule 21 (ty)


State 154

   22 ty: LBRACE field_lst . RBRACE

    RBRACE  shift, and go to state 165


State 155

   23 ty: ARRAY OF . ID

    ID  shift, and go to state 166


State 156

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   51    | l_val LBRACK exp RBRACK pos OF exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 51 (exp)


State 157

   56 exp: FOR pos ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 167
    seq_exp   go to state 15
    fun_call  go to state 16


State 158

   26 field: ID COLON ID .

    $default  reduce using rule 26 (field)


State 159

   15 fun_dec: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 168


State 160

   13 fun_dec: FUNCTION ID LPAREN RPAREN EQ exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 13 (fun_dec)


State 161

   16 fun_dec: FUNCTION ID LPAREN field_lst RPAREN COLON . ID EQ exp

    ID  shift, and go to state 169


State 162

   14 fun_dec: FUNCTION ID LPAREN field_lst RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 170
    seq_exp   go to state 15
    fun_call  go to state 16


State 163

   25 field_lst: field COMMA field_lst .

    $default  reduce using rule 25 (field_lst)


State 164

    9 dec: VAR pos ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 171
    seq_exp   go to state 15
    fun_call  go to state 16


State 165

   22 ty: LBRACE field_lst RBRACE .

    $default  reduce using rule 22 (ty)


State 166

   23 ty: ARRAY OF ID .

    $default  reduce using rule 23 (ty)


State 167

   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp
   56    | FOR pos ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 56 (exp)


State 168

   15 fun_dec: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 172
    seq_exp   go to state 15
    fun_call  go to state 16


State 169

   16 fun_dec: FUNCTION ID LPAREN field_lst RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 173


State 170

   14 fun_dec: FUNCTION ID LPAREN field_lst RPAREN EQ exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 14 (fun_dec)


State 171

    9 dec: VAR pos ID COLON ID ASSIGN exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 9 (dec)


State 172

   15 fun_dec: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 15 (fun_dec)


State 173

   16 fun_dec: FUNCTION ID LPAREN field_lst RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 174
    seq_exp   go to state 15
    fun_call  go to state 16


State 174

   16 fun_dec: FUNCTION ID LPAREN field_lst RPAREN COLON ID EQ exp .
   36 exp: exp . PLUS pos exp
   37    | exp . MINUS pos exp
   38    | exp . TIMES pos exp
   39    | exp . DIVIDE pos exp
   40    | exp . EQ pos exp
   41    | exp . NEQ pos exp
   42    | exp . GT pos exp
   43    | exp . LT pos exp
   44    | exp . GE pos exp
   45    | exp . LE pos exp
   46    | exp . AND pos exp
   47    | exp . OR pos exp

    PLUS    shift, and go to state 34
    MINUS   shift, and go to state 35
    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37
    EQ      shift, and go to state 38
    NEQ     shift, and go to state 39
    LT      shift, and go to state 40
    GT      shift, and go to state 41
    LE      shift, and go to state 42
    GE      shift, and go to state 43
    AND     shift, and go to state 44
    OR      shift, and go to state 45

    $default  reduce using rule 16 (fun_dec)
