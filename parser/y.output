Terminals unused in grammar

   LE
   GE
   END
   TYPE


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: LBRACE dec RBRACE

    3 dec: ty_dec
    4    | var_dec
    5    | fun_dec

    6 ty_dec: ty ID EQ ty

    7 ty: ID
    8   | LBRACE ty_fields RBRACE
    9   | ARRAY OF ID

   10 ty_fields: ID COLON ID LBRACE RBRACE
   11          | ID COLON ID LBRACE ty_decl_list RBRACE

   12 ty_decl_list: ty_decl
   13             | ty_decl_list COMMA ty_decl

   14 ty_decl: ID COLON ID

   15 var_dec: VAR ID ASSIGN exp
   16        | VAR ID COLON ID ASSIGN exp

   17 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN EQ exp
   18        | FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ exp

   19 l_val: ID
   20      | l_val DOT ID
   21      | l_val LBRACK exp RBRACK

   22 exp: seq_exp
   23    | l_val
   24    | NIL
   25    | INT
   26    | STRING
   27    | UMINUS exp
   28    | fun_call
   29    | exp PLUS exp
   30    | exp MINUS exp
   31    | exp TIMES exp
   32    | exp DIVIDE exp
   33    | exp EQ exp
   34    | exp NEQ exp
   35    | exp GT exp
   36    | exp LT exp
   37    | exp GEQ exp
   38    | exp LEQ exp
   39    | exp AND exp
   40    | exp OR exp
   41    | ID LBRACE RBRACE
   42    | ID LBRACE decl_lst RBRACE
   43    | l_val LBRACK exp RBRACK OF exp
   44    | l_val ASSIGN exp
   45    | IF exp THEN exp ELSE exp
   46    | IF exp THEN exp
   47    | WHILE exp DO exp
   48    | FOR ID ASSIGN exp TO exp DO exp
   49    | BREAK
   50    | LET decs IN seq_exp

   51 seq_exp: LPAREN RPAREN
   52        | LPAREN exp_lst RPAREN

   53 exp_lst: exp
   54        | exp_lst SEMICOLON exp

   55 fun_call: ID LPAREN RPAREN
   56         | ID LPAREN arg_lst RPAREN

   57 arg_lst: exp
   58        | arg_lst COMMA exp

   59 decl: ID EQ exp

   60 decl_lst: decl
   61         | decl_lst COMMA decl


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 9 10 11 14 15 16 17 18 19 20 41 42 48 55 56 59
STRING (259) 26
INT (260) 25
COMMA (261) 13 58 61
COLON (262) 10 11 14 16 18
SEMICOLON (263) 54
LPAREN (264) 17 18 51 52 55 56
RPAREN (265) 17 18 51 52 55 56
LBRACK (266) 21 43
RBRACK (267) 21 43
LBRACE (268) 2 8 10 11 41 42
RBRACE (269) 2 8 10 11 41 42
DOT (270) 20
PLUS (271) 29
MINUS (272) 30
TIMES (273) 31
DIVIDE (274) 32
EQ (275) 6 17 18 33 59
NEQ (276) 34
LT (277) 36
LE (278)
GT (279) 35
GE (280)
AND (281) 39
OR (282) 40
ASSIGN (283) 15 16 44 48
ARRAY (284) 9
IF (285) 45 46
THEN (286) 45 46
ELSE (287) 45
WHILE (288) 47
FOR (289) 48
TO (290) 48
DO (291) 47 48
LET (292) 50
IN (293) 50
END (294)
OF (295) 9 43
BREAK (296) 49
NIL (297) 24
FUNCTION (298) 17 18
VAR (299) 15 16
TYPE (300)
UMINUS (301) 27
GEQ (302) 37
LEQ (303) 38


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
decs (51)
    on left: 2, on right: 50
dec (52)
    on left: 3 4 5, on right: 2
ty_dec (53)
    on left: 6, on right: 3
ty (54)
    on left: 7 8 9, on right: 6
ty_fields (55)
    on left: 10 11, on right: 8 17 18
ty_decl_list (56)
    on left: 12 13, on right: 11 13
ty_decl (57)
    on left: 14, on right: 12 13
var_dec (58)
    on left: 15 16, on right: 4
fun_dec (59)
    on left: 17 18, on right: 5
l_val (60)
    on left: 19 20 21, on right: 20 21 23 43 44
exp (61)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46 47 48 49 50, on right: 1 15 16 17 18 21 27
    29 30 31 32 33 34 35 36 37 38 39 40 43 44 45 46 47 48 53 54 57
    58 59
seq_exp (62)
    on left: 51 52, on right: 22 50
exp_lst (63)
    on left: 53 54, on right: 52 54
fun_call (64)
    on left: 55 56, on right: 28
arg_lst (65)
    on left: 57 58, on right: 56 58
decl (66)
    on left: 59, on right: 60 61
decl_lst (67)
    on left: 60 61, on right: 42 61


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    program   go to state 12
    l_val     go to state 13
    exp       go to state 14
    seq_exp   go to state 15
    fun_call  go to state 16


State 1

   19 l_val: ID .
   41 exp: ID . LBRACE RBRACE
   42    | ID . LBRACE decl_lst RBRACE
   55 fun_call: ID . LPAREN RPAREN
   56         | ID . LPAREN arg_lst RPAREN

    LPAREN  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 19 (l_val)


State 2

   26 exp: STRING .

    $default  reduce using rule 26 (exp)


State 3

   25 exp: INT .

    $default  reduce using rule 25 (exp)


State 4

   51 seq_exp: LPAREN . RPAREN
   52        | LPAREN . exp_lst RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 19
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 20
    seq_exp   go to state 15
    exp_lst   go to state 21
    fun_call  go to state 16


State 5

   45 exp: IF . exp THEN exp ELSE exp
   46    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 22
    seq_exp   go to state 15
    fun_call  go to state 16


State 6

   47 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 23
    seq_exp   go to state 15
    fun_call  go to state 16


State 7

   48 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


State 8

   50 exp: LET . decs IN seq_exp

    LBRACE  shift, and go to state 25

    decs  go to state 26


State 9

   49 exp: BREAK .

    $default  reduce using rule 49 (exp)


State 10

   24 exp: NIL .

    $default  reduce using rule 24 (exp)


State 11

   27 exp: UMINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 27
    seq_exp   go to state 15
    fun_call  go to state 16


State 12

    0 $accept: program . $end

    $end  shift, and go to state 28


State 13

   20 l_val: l_val . DOT ID
   21      | l_val . LBRACK exp RBRACK
   23 exp: l_val .
   43    | l_val . LBRACK exp RBRACK OF exp
   44    | l_val . ASSIGN exp

    LBRACK  shift, and go to state 29
    DOT     shift, and go to state 30
    ASSIGN  shift, and go to state 31

    $default  reduce using rule 23 (exp)


State 14

    1 program: exp .
   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 1 (program)


State 15

   22 exp: seq_exp .

    $default  reduce using rule 22 (exp)


State 16

   28 exp: fun_call .

    $default  reduce using rule 28 (exp)


State 17

   55 fun_call: ID LPAREN . RPAREN
   56         | ID LPAREN . arg_lst RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 44
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 45
    seq_exp   go to state 15
    fun_call  go to state 16
    arg_lst   go to state 46


State 18

   41 exp: ID LBRACE . RBRACE
   42    | ID LBRACE . decl_lst RBRACE

    ID      shift, and go to state 47
    RBRACE  shift, and go to state 48

    decl      go to state 49
    decl_lst  go to state 50


State 19

   51 seq_exp: LPAREN RPAREN .

    $default  reduce using rule 51 (seq_exp)


State 20

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   53 exp_lst: exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 53 (exp_lst)


State 21

   52 seq_exp: LPAREN exp_lst . RPAREN
   54 exp_lst: exp_lst . SEMICOLON exp

    SEMICOLON  shift, and go to state 51
    RPAREN     shift, and go to state 52


State 22

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   45    | IF exp . THEN exp ELSE exp
   46    | IF exp . THEN exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    THEN    shift, and go to state 53
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43


State 23

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   47    | WHILE exp . DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    DO      shift, and go to state 54
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43


State 24

   48 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 55


State 25

    2 decs: LBRACE . dec RBRACE

    ID        shift, and go to state 56
    LBRACE    shift, and go to state 57
    ARRAY     shift, and go to state 58
    FUNCTION  shift, and go to state 59
    VAR       shift, and go to state 60

    dec      go to state 61
    ty_dec   go to state 62
    ty       go to state 63
    var_dec  go to state 64
    fun_dec  go to state 65


State 26

   50 exp: LET decs . IN seq_exp

    IN  shift, and go to state 66


State 27

   27 exp: UMINUS exp .
   29    | exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    $default  reduce using rule 27 (exp)


State 28

    0 $accept: program $end .

    $default  accept


State 29

   21 l_val: l_val LBRACK . exp RBRACK
   43 exp: l_val LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 67
    seq_exp   go to state 15
    fun_call  go to state 16


State 30

   20 l_val: l_val DOT . ID

    ID  shift, and go to state 68


State 31

   44 exp: l_val ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 69
    seq_exp   go to state 15
    fun_call  go to state 16


State 32

   29 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 70
    seq_exp   go to state 15
    fun_call  go to state 16


State 33

   30 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 71
    seq_exp   go to state 15
    fun_call  go to state 16


State 34

   31 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 72
    seq_exp   go to state 15
    fun_call  go to state 16


State 35

   32 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 73
    seq_exp   go to state 15
    fun_call  go to state 16


State 36

   33 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 74
    seq_exp   go to state 15
    fun_call  go to state 16


State 37

   34 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 75
    seq_exp   go to state 15
    fun_call  go to state 16


State 38

   36 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 76
    seq_exp   go to state 15
    fun_call  go to state 16


State 39

   35 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 77
    seq_exp   go to state 15
    fun_call  go to state 16


State 40

   39 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 78
    seq_exp   go to state 15
    fun_call  go to state 16


State 41

   40 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 79
    seq_exp   go to state 15
    fun_call  go to state 16


State 42

   37 exp: exp GEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 80
    seq_exp   go to state 15
    fun_call  go to state 16


State 43

   38 exp: exp LEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 81
    seq_exp   go to state 15
    fun_call  go to state 16


State 44

   55 fun_call: ID LPAREN RPAREN .

    $default  reduce using rule 55 (fun_call)


State 45

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   57 arg_lst: exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 57 (arg_lst)


State 46

   56 fun_call: ID LPAREN arg_lst . RPAREN
   58 arg_lst: arg_lst . COMMA exp

    COMMA   shift, and go to state 82
    RPAREN  shift, and go to state 83


State 47

   59 decl: ID . EQ exp

    EQ  shift, and go to state 84


State 48

   41 exp: ID LBRACE RBRACE .

    $default  reduce using rule 41 (exp)


State 49

   60 decl_lst: decl .

    $default  reduce using rule 60 (decl_lst)


State 50

   42 exp: ID LBRACE decl_lst . RBRACE
   61 decl_lst: decl_lst . COMMA decl

    COMMA   shift, and go to state 85
    RBRACE  shift, and go to state 86


State 51

   54 exp_lst: exp_lst SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 87
    seq_exp   go to state 15
    fun_call  go to state 16


State 52

   52 seq_exp: LPAREN exp_lst RPAREN .

    $default  reduce using rule 52 (seq_exp)


State 53

   45 exp: IF exp THEN . exp ELSE exp
   46    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 88
    seq_exp   go to state 15
    fun_call  go to state 16


State 54

   47 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 89
    seq_exp   go to state 15
    fun_call  go to state 16


State 55

   48 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 90
    seq_exp   go to state 15
    fun_call  go to state 16


State 56

    7 ty: ID .

    $default  reduce using rule 7 (ty)


State 57

    8 ty: LBRACE . ty_fields RBRACE

    ID  shift, and go to state 91

    ty_fields  go to state 92


State 58

    9 ty: ARRAY . OF ID

    OF  shift, and go to state 93


State 59

   17 fun_dec: FUNCTION . ID LPAREN ty_fields RPAREN EQ exp
   18        | FUNCTION . ID LPAREN ty_fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 94


State 60

   15 var_dec: VAR . ID ASSIGN exp
   16        | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 95


State 61

    2 decs: LBRACE dec . RBRACE

    RBRACE  shift, and go to state 96


State 62

    3 dec: ty_dec .

    $default  reduce using rule 3 (dec)


State 63

    6 ty_dec: ty . ID EQ ty

    ID  shift, and go to state 97


State 64

    4 dec: var_dec .

    $default  reduce using rule 4 (dec)


State 65

    5 dec: fun_dec .

    $default  reduce using rule 5 (dec)


State 66

   50 exp: LET decs IN . seq_exp

    LPAREN  shift, and go to state 4

    seq_exp  go to state 98


State 67

   21 l_val: l_val LBRACK exp . RBRACK
   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   43    | l_val LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 99
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43


State 68

   20 l_val: l_val DOT ID .

    $default  reduce using rule 20 (l_val)


State 69

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   44    | l_val ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 44 (exp)


State 70

   29 exp: exp . PLUS exp
   29    | exp PLUS exp .
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    $default  reduce using rule 29 (exp)


State 71

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   30    | exp MINUS exp .
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    $default  reduce using rule 30 (exp)


State 72

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   31    | exp TIMES exp .
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    $default  reduce using rule 31 (exp)


State 73

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   32    | exp DIVIDE exp .
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    $default  reduce using rule 32 (exp)


State 74

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   33    | exp EQ exp .
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 33 (exp)


State 75

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   34    | exp NEQ exp .
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 34 (exp)


State 76

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   36    | exp LT exp .
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 36 (exp)


State 77

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   35    | exp GT exp .
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 35 (exp)


State 78

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   39    | exp AND exp .
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    AND  error (nonassociative)

    $default  reduce using rule 39 (exp)


State 79

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   40    | exp OR exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    OR  error (nonassociative)

    $default  reduce using rule 40 (exp)


State 80

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   37    | exp GEQ exp .
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 37 (exp)


State 81

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   38    | exp LEQ exp .
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 38 (exp)


State 82

   58 arg_lst: arg_lst COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 100
    seq_exp   go to state 15
    fun_call  go to state 16


State 83

   56 fun_call: ID LPAREN arg_lst RPAREN .

    $default  reduce using rule 56 (fun_call)


State 84

   59 decl: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 101
    seq_exp   go to state 15
    fun_call  go to state 16


State 85

   61 decl_lst: decl_lst COMMA . decl

    ID  shift, and go to state 47

    decl  go to state 102


State 86

   42 exp: ID LBRACE decl_lst RBRACE .

    $default  reduce using rule 42 (exp)


State 87

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   54 exp_lst: exp_lst SEMICOLON exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 54 (exp_lst)


State 88

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   45    | IF exp THEN exp . ELSE exp
   46    | IF exp THEN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    ELSE    shift, and go to state 103
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 46 (exp)


State 89

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   47    | WHILE exp DO exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 47 (exp)


State 90

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   48    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    TO      shift, and go to state 104
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43


State 91

   10 ty_fields: ID . COLON ID LBRACE RBRACE
   11          | ID . COLON ID LBRACE ty_decl_list RBRACE

    COLON  shift, and go to state 105


State 92

    8 ty: LBRACE ty_fields . RBRACE

    RBRACE  shift, and go to state 106


State 93

    9 ty: ARRAY OF . ID

    ID  shift, and go to state 107


State 94

   17 fun_dec: FUNCTION ID . LPAREN ty_fields RPAREN EQ exp
   18        | FUNCTION ID . LPAREN ty_fields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 108


State 95

   15 var_dec: VAR ID . ASSIGN exp
   16        | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 109
    ASSIGN  shift, and go to state 110


State 96

    2 decs: LBRACE dec RBRACE .

    $default  reduce using rule 2 (decs)


State 97

    6 ty_dec: ty ID . EQ ty

    EQ  shift, and go to state 111


State 98

   50 exp: LET decs IN seq_exp .

    $default  reduce using rule 50 (exp)


State 99

   21 l_val: l_val LBRACK exp RBRACK .
   43 exp: l_val LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 112

    $default  reduce using rule 21 (l_val)


State 100

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   58 arg_lst: arg_lst COMMA exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 58 (arg_lst)


State 101

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   59 decl: ID EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 59 (decl)


State 102

   61 decl_lst: decl_lst COMMA decl .

    $default  reduce using rule 61 (decl_lst)


State 103

   45 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 113
    seq_exp   go to state 15
    fun_call  go to state 16


State 104

   48 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 114
    seq_exp   go to state 15
    fun_call  go to state 16


State 105

   10 ty_fields: ID COLON . ID LBRACE RBRACE
   11          | ID COLON . ID LBRACE ty_decl_list RBRACE

    ID  shift, and go to state 115


State 106

    8 ty: LBRACE ty_fields RBRACE .

    $default  reduce using rule 8 (ty)


State 107

    9 ty: ARRAY OF ID .

    $default  reduce using rule 9 (ty)


State 108

   17 fun_dec: FUNCTION ID LPAREN . ty_fields RPAREN EQ exp
   18        | FUNCTION ID LPAREN . ty_fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 91

    ty_fields  go to state 116


State 109

   16 var_dec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 117


State 110

   15 var_dec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 118
    seq_exp   go to state 15
    fun_call  go to state 16


State 111

    6 ty_dec: ty ID EQ . ty

    ID      shift, and go to state 56
    LBRACE  shift, and go to state 57
    ARRAY   shift, and go to state 58

    ty  go to state 119


State 112

   43 exp: l_val LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 120
    seq_exp   go to state 15
    fun_call  go to state 16


State 113

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   45    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 45 (exp)


State 114

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   48    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    DO      shift, and go to state 121
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43


State 115

   10 ty_fields: ID COLON ID . LBRACE RBRACE
   11          | ID COLON ID . LBRACE ty_decl_list RBRACE

    LBRACE  shift, and go to state 122


State 116

   17 fun_dec: FUNCTION ID LPAREN ty_fields . RPAREN EQ exp
   18        | FUNCTION ID LPAREN ty_fields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 123


State 117

   16 var_dec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 124


State 118

   15 var_dec: VAR ID ASSIGN exp .
   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 15 (var_dec)


State 119

    6 ty_dec: ty ID EQ ty .

    $default  reduce using rule 6 (ty_dec)


State 120

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   43    | l_val LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 43 (exp)


State 121

   48 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 125
    seq_exp   go to state 15
    fun_call  go to state 16


State 122

   10 ty_fields: ID COLON ID LBRACE . RBRACE
   11          | ID COLON ID LBRACE . ty_decl_list RBRACE

    ID      shift, and go to state 126
    RBRACE  shift, and go to state 127

    ty_decl_list  go to state 128
    ty_decl       go to state 129


State 123

   17 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN . EQ exp
   18        | FUNCTION ID LPAREN ty_fields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 130
    EQ     shift, and go to state 131


State 124

   16 var_dec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 132
    seq_exp   go to state 15
    fun_call  go to state 16


State 125

   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp
   48    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 48 (exp)


State 126

   14 ty_decl: ID . COLON ID

    COLON  shift, and go to state 133


State 127

   10 ty_fields: ID COLON ID LBRACE RBRACE .

    $default  reduce using rule 10 (ty_fields)


State 128

   11 ty_fields: ID COLON ID LBRACE ty_decl_list . RBRACE
   13 ty_decl_list: ty_decl_list . COMMA ty_decl

    COMMA   shift, and go to state 134
    RBRACE  shift, and go to state 135


State 129

   12 ty_decl_list: ty_decl .

    $default  reduce using rule 12 (ty_decl_list)


State 130

   18 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 136


State 131

   17 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 137
    seq_exp   go to state 15
    fun_call  go to state 16


State 132

   16 var_dec: VAR ID COLON ID ASSIGN exp .
   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 16 (var_dec)


State 133

   14 ty_decl: ID COLON . ID

    ID  shift, and go to state 138


State 134

   13 ty_decl_list: ty_decl_list COMMA . ty_decl

    ID  shift, and go to state 126

    ty_decl  go to state 139


State 135

   11 ty_fields: ID COLON ID LBRACE ty_decl_list RBRACE .

    $default  reduce using rule 11 (ty_fields)


State 136

   18 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 140


State 137

   17 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN EQ exp .
   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 17 (fun_dec)


State 138

   14 ty_decl: ID COLON ID .

    $default  reduce using rule 14 (ty_decl)


State 139

   13 ty_decl_list: ty_decl_list COMMA ty_decl .

    $default  reduce using rule 13 (ty_decl_list)


State 140

   18 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    UMINUS  shift, and go to state 11

    l_val     go to state 13
    exp       go to state 141
    seq_exp   go to state 15
    fun_call  go to state 16


State 141

   18 fun_dec: FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ exp .
   29 exp: exp . PLUS exp
   30    | exp . MINUS exp
   31    | exp . TIMES exp
   32    | exp . DIVIDE exp
   33    | exp . EQ exp
   34    | exp . NEQ exp
   35    | exp . GT exp
   36    | exp . LT exp
   37    | exp . GEQ exp
   38    | exp . LEQ exp
   39    | exp . AND exp
   40    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    GT      shift, and go to state 39
    AND     shift, and go to state 40
    OR      shift, and go to state 41
    GEQ     shift, and go to state 42
    LEQ     shift, and go to state 43

    $default  reduce using rule 18 (fun_dec)
